
--A Java based WA basically contains  web-components or webresources like html file, image file, servlet program, jsp program.

--each webresource program is capable of generating one webpage.

webpage: that we can open through a web browser s/w.




it is a protocol that contains set of rules and guidelines to get communication bt
http client (browser s/w)  and web-server/application-server.

http response  : this response will come from the server to the client

http response structure:
--------------------------------

webserver will generate the http response for a http request to the client.

http status code:
-----------------------

--by default these status code will be set by the server, or as a developer we can 
also set our desired status code.

100 -- 199  : information 
200 -- 299 : success or OK
300--399 : redirection
400 -499 : incomplete resource / bad request
500-599 : server-error

---these status code will be used by the client to know the status of their request.




in traditional web app, all the activity will be taken care by the Servlet.
-- with the traditional web app, if multiple request comes to a servlet, it will be the burden to the servlet to maintain all the logics.

--to simplify the role of servlet, sun-micosystem has introduced another technology called JSP.

--initialy JSP invented to replace the Servlet, but very soon developers realised that instead of replacing the Servlet with JSP, JSP should complement the Servlet. and Sun-microsystem has invented a pattern called MVC patten to simplify the Java based Webapplication.


--In traditional mvc based webapplication developers need to write the Servlet class which will have all the flow control logic and configure that servlet inside our application.

--whereas in spring-mvc framework developers need not  develop any Servlet class, instead Spring-mvc f/w has given a Servlet which will have all the flow control logic. (DispatcherServlet)

---WS is also a type of WA, that can generate dynamic result as raw data(json, xml, text) instead of generating a html response (webpage)

--WA generates the view(webpage) whereas WS generates raw data.

--this raw data generated by the WS can be reused inside any other WA or any other type of application developed in any technology.

Indigo -----> html   (Webapplication) : it is for enduser
            -----> raw data (Webservices)  :- it is for any other application
Yatra 
 :----------Webapplication 

1. Date : date and time on which request is made from the client.
2. Host: ipaddress of the client.
3. user-agent: from which browser the client has generated the request.
4.content-type: type of the data coming from the request body (json, txt, xml, pdf, jpg)
5.connection : live or lost
6.cookies: name-value pair text   :- 

we can create our headers also :
